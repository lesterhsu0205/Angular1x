archivesBaseName = "angular1x-web"

// 聽說是用來生成 eclipse web 項目要用... idea 可無視
apply plugin: "eclipse-wtp"
apply plugin: "war"

sourceSets {
    main {
        java{
            srcDir "src/main/java"
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDir "src/test/java"
        }
    }
}

//webAppDir file("src/main/webapp")
webAppDirName = "src/main/webapp"

dependencies {

    compile(
            project(":angular1x-core"),
    )

    // 因為此項目為 web 項目，所以需要將下述 jar 包設置為 provided
    providedCompile(
            "javax.servlet:javax.servlet-api:3.0.1",
            "javax.servlet.jsp:javax.servlet.jsp-api:2.3.1",
    )

}

// 設定 snapshot war 版號
// 格式 project-web-1.0.123-SNAPSHOT.war
task setSnapshotWarVer {
    doFirst {
        println "== Snapshot begin...."
        println "================================================="
        def buildVer = buildVer([project: project, numFilename: "build_ver.propties"])
        version += "." + buildVer
        version += "-SNAPSHOT"
        println ">> new version: ${version}"
        println ">> war: ${archivesBaseName}-${version}.war"
        println "================================================="

        war {
            excludes = ['**/rebel.xml', '**/.keep']

            manifest = defaultManifest([
                    project: project,
                    version: version,
                    projectVendor: "${versions.project_vendor}"
            ])
        }
    }
}

// 設定 release 包的版號
// 格式 project-web-1.0.123.war
task setReleaseWarVer {
    doFirst {
        println "== Release Begin..."
        println "================================================="
        def buildVer = buildVer([project: project, numFilename: "build_ver.propties"])
        version += "." + buildVer
        println ">> new version: ${version}"
        println ">> war: ${archivesBaseName}-${version}.war"
        println "================================================="

        war {
            excludes = ["**/rebel.xml", "**/.keep"]

            manifest = defaultManifest([
                    project: project,
                    version: version,
                    projectVendor: "${versions.project_vendor}"
            ])

        }

//        sourceSets {
//            main {
//                resources {
//                    srcDirs = ["src/main/resources", "src/main/resources-prod"]
//                }
//            }
//        }
    }
}

// 編譯 snapshot war
task snapshot(dependsOn: ['setSnapshotWarVer', 'war']) {
    doLast {
        println '== Snapshot WAR Generate Over'
    }
}

// 編譯 release war
task release(dependsOn: ['setReleaseWarVer', 'war']) {
    doLast {
        println '== Release WAR Generate Over'
    }
}


